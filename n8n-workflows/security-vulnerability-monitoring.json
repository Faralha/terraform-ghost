{
  "name": "Security Vulnerability Monitoring",
  "nodes": [
    {
      "parameters": {
        "path": "security-scan",
        "options": {}
      },
      "id": "security-webhook",
      "name": "Security Scan Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "jsCode": "// Parse security scan webhook data\nconst queryParams = $input.first().json.query;\n\n// Extract security scan information\nconst securityData = {\n  event: queryParams.event || 'unknown',\n  timestamp: queryParams.timestamp || new Date().toISOString(),\n  hostname: queryParams.hostname || 'unknown',\n  container: queryParams.container || 'unknown',\n  severity: queryParams.severity || 'UNKNOWN',\n  vulnerability_count: parseInt(queryParams.vulnerability_count) || 0,\n  scan_result: queryParams.scan_result || 'No details available',\n  source: queryParams.source || 'security_scan'\n};\n\n// Determine alert urgency and formatting\nlet alertIcon, alertColor, alertTitle;\n\nswitch (securityData.severity) {\n  case 'CRITICAL':\n    alertIcon = 'üö®';\n    alertColor = '#FF0000';\n    alertTitle = 'CRITICAL SECURITY ALERT';\n    break;\n  case 'HIGH':\n    alertIcon = '‚ö†Ô∏è';\n    alertColor = '#FF8C00';\n    alertTitle = 'HIGH SECURITY RISK';\n    break;\n  case 'MEDIUM':\n    alertIcon = '‚ö°';\n    alertColor = '#FFD700';\n    alertTitle = 'MEDIUM SECURITY RISK';\n    break;\n  case 'LOW':\n  case 'INFO':\n    alertIcon = '‚úÖ';\n    alertColor = '#00AA00';\n    alertTitle = 'SECURITY STATUS';\n    break;\n  case 'ERROR':\n    alertIcon = '‚ùå';\n    alertColor = '#AA0000';\n    alertTitle = 'SECURITY SCAN ERROR';\n    break;\n  default:\n    alertIcon = 'üîç';\n    alertColor = '#0066CC';\n    alertTitle = 'SECURITY SCAN UPDATE';\n}\n\n// Create formatted notification message\nconst notificationMessage = {\n  ...securityData,\n  alert_icon: alertIcon,\n  alert_color: alertColor,\n  alert_title: alertTitle,\n  formatted_message: `${alertIcon} **${alertTitle}**\\n\\n` +\n                     `**Container:** ${securityData.container}\\n` +\n                     `**Hostname:** ${securityData.hostname}\\n` +\n                     `**Severity:** ${securityData.severity}\\n` +\n                     `**Vulnerabilities:** ${securityData.vulnerability_count}\\n` +\n                     `**Timestamp:** ${securityData.timestamp}\\n\\n` +\n                     `**Details:** ${securityData.scan_result}\\n\\n` +\n                     `**Event:** ${securityData.event}`,\n  requires_action: ['CRITICAL', 'HIGH', 'ERROR'].includes(securityData.severity),\n  notification_priority: securityData.severity === 'CRITICAL' ? 'urgent' : \n                        securityData.severity === 'HIGH' ? 'high' : 'normal'\n};\n\nreturn { json: notificationMessage };"
      },
      "id": "parse-security-data",
      "name": "Parse Security Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "critical-condition",
              "leftValue": "={{ $json.severity }}",
              "rightValue": "CRITICAL",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "high-condition", 
              "leftValue": "={{ $json.severity }}",
              "rightValue": "HIGH",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "check-severity",
      "name": "Is Critical/High Risk?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyContentType": "json",
        "jsonBody": "={\n  \"channel\": \"#security-alerts\",\n  \"username\": \"Security Scanner Bot\",\n  \"icon_emoji\": \":warning:\",\n  \"attachments\": [\n    {\n      \"color\": \"{{ $json.alert_color }}\",\n      \"title\": \"{{ $json.alert_title }}\",\n      \"fields\": [\n        {\n          \"title\": \"Container\",\n          \"value\": \"{{ $json.container }}\",\n          \"short\": true\n        },\n        {\n          \"title\": \"Severity\",\n          \"value\": \"{{ $json.severity }}\",\n          \"short\": true\n        },\n        {\n          \"title\": \"Vulnerabilities\",\n          \"value\": \"{{ $json.vulnerability_count }}\",\n          \"short\": true\n        },\n        {\n          \"title\": \"Event Type\", \n          \"value\": \"{{ $json.event }}\",\n          \"short\": true\n        },\n        {\n          \"title\": \"Scan Results\",\n          \"value\": \"{{ $json.scan_result }}\",\n          \"short\": false\n        }\n      ],\n      \"footer\": \"Trivy Security Scanner\",\n      \"ts\": \"{{ Math.floor(Date.now() / 1000) }}\"\n    }\n  ]\n}",
        "options": {}
      },
      "id": "send-slack-alert",
      "name": "Send Slack Alert",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [900, 200],
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://discord.com/api/webhooks/YOUR_WEBHOOK_ID/YOUR_WEBHOOK_TOKEN",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyContentType": "json",
        "jsonBody": "={\n  \"embeds\": [\n    {\n      \"title\": \"{{ $json.alert_icon }} {{ $json.alert_title }}\",\n      \"description\": \"Security vulnerability scan results for container infrastructure\",\n      \"color\": {{ $json.alert_color === '#FF0000' ? '15158332' : ($json.alert_color === '#FF8C00' ? '16753920' : ($json.alert_color === '#FFD700' ? '16766720' : '65280')) }},\n      \"fields\": [\n        {\n          \"name\": \"üê≥ Container\",\n          \"value\": \"{{ $json.container }}\",\n          \"inline\": true\n        },\n        {\n          \"name\": \"‚ö†Ô∏è Severity\",\n          \"value\": \"{{ $json.severity }}\",\n          \"inline\": true\n        },\n        {\n          \"name\": \"üî¢ Vulnerabilities\",\n          \"value\": \"{{ $json.vulnerability_count }}\",\n          \"inline\": true\n        },\n        {\n          \"name\": \"üñ•Ô∏è Host\",\n          \"value\": \"{{ $json.hostname }}\",\n          \"inline\": true\n        },\n        {\n          \"name\": \"üìÖ Timestamp\",\n          \"value\": \"{{ $json.timestamp }}\",\n          \"inline\": true\n        },\n        {\n          \"name\": \"üîç Event\",\n          \"value\": \"{{ $json.event }}\",\n          \"inline\": true\n        },\n        {\n          \"name\": \"üìã Scan Details\",\n          \"value\": \"{{ $json.scan_result }}\",\n          \"inline\": false\n        }\n      ],\n      \"footer\": {\n        \"text\": \"Trivy Security Scanner ‚Ä¢ terraform-ghost project\"\n      },\n      \"timestamp\": \"{{ new Date().toISOString() }}\"\n    }\n  ]\n}",
        "options": {}
      },
      "id": "send-discord-alert",
      "name": "Send Discord Alert", 
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [900, 300],
      "disabled": true
    },
    {
      "parameters": {
        "operation": "log",
        "message": "=Security scan processed: {{ $json.event }} - Container: {{ $json.container }} - Severity: {{ $json.severity }} - Vulnerabilities: {{ $json.vulnerability_count }}"
      },
      "id": "log-security-event",
      "name": "Log Security Event",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [900, 400]
    },
    {
      "parameters": {
        "operation": "log",
        "message": "=Low priority security event logged: {{ $json.event }} - {{ $json.container }} - {{ $json.severity }}"
      },
      "id": "log-low-priority",
      "name": "Log Low Priority Event",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [900, 500]
    }
  ],
  "pinData": {},
  "connections": {
    "Security Scan Webhook": {
      "main": [
        [
          {
            "node": "Parse Security Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Security Data": {
      "main": [
        [
          {
            "node": "Is Critical/High Risk?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Critical/High Risk?": {
      "main": [
        [
          {
            "node": "Send Slack Alert",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send Discord Alert",
            "type": "main",
            "index": 0
          },
          {
            "node": "Log Security Event",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Low Priority Event",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "5",
  "id": "5",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "tags": []
}